name: Haskell CI

on: [push, pull_request]

jobs:
  stack:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        plan:
          - ghc: '8.10.3'
            resolver: 'lts-17.2'
          - ghc: '8.8.3'
            resolver: 'lts-16.11'
          - ghc: '8.6.5'
            resolver: 'lts-14.27'

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.plan.allow-fail == true }}
    env:
      RESOLVER: ${{ matrix.plan.resolver }}

    steps:
    - uses: actions/checkout@v2
      
    - uses: haskell/actions/setup@v1
      id: cabal-setup-haskell
      with:
        ghc-version: ${{ matrix.plan.ghc }}
        enable-stack: true

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/.stack
        ## TODO: should we use stack.yaml.lock ?
        key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml') }}-${{ matrix.plan.resolver }}
        restore-keys: |
          ${{ runner.os }}-stack-${{ hashFiles('stack.yaml') }}-
          ${{ runner.os }}-stack-
    
    - name: Install dependencies
      run: stack --no-terminal --system-ghc --resolver $RESOLVER test --bench --only-dependencies
    - name: Build
      run: stack --no-terminal --system-ghc --resolver $RESOLVER build --bench --haddock --no-haddock-deps
    - name: Test
      run: stack --no-terminal --system-ghc -j 1 --resolver $RESOLVER test --bench --no-run-benchmarks --haddock --no-haddock-deps


  cabal:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        plan:
          - ghc: latest
            allow-fail: true
          - ghc: '9.0'
            allow-fail: true
          - ghc: '8.10'

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.plan.allow-fail == true }}

    steps:
    - uses: actions/checkout@v2
      
    - uses: haskell/actions/setup@v1
      id: cabal-setup-haskell
      with:
        ghc-version: ${{ matrix.plan.ghc }}

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.cabal-setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-cabal-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-cabal-

    - name: Configure
      run: |
        set -ex
        rm -f cabal.project.freeze
        cabal v2-update
        cabal v2-configure --enable-tests --enable-benchmarks --test-show-details streaming
        cabal v2-freeze
    - name: Install dependencies
      run: cabal v2-build --only-dependencies all
    - name: Build
      run: cabal v2-build all
    - name: Haddock
      run: cabal v2-haddock all
    - name: Test
      run: cabal v2-test --jobs=1 all
